import zipfile
import os
import hashlib
import re
import requests

# –ó–∞–¥–∞–Ω–∏–µ 1.
# –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∞—Ä—Ö–∏–≤–∞
directory_to_extract_to = 'C:\\piton'
arch_file = 'C:\\piton\\tiff-4.2.0_lab1.zip'
# –ø—É—Ç—å –∫ –∞—Ä—Ö–∏–≤—É

"""
#–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω –∞—Ä—Ö–∏–≤
#–° –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è zipfile –∏–∑–≤–ª–µ—á—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–∞ –≤ —Å–æ–∑–¥–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
"""
test_zip = zipfile.ZipFile(arch_file)
test_zip.extractall(directory_to_extract_to)
test_zip.close()

""""
# 2.1 –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ (–ø–æ–ª–Ω—ã–π –ø—É—Ç—å) —Ñ–æ—Ä–º–∞—Ç–∞ txt, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ directory_to_extract_to.
#–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ txt_files
"""

txt_files = []
for root, dirs, files in os.walk(directory_to_extract_to):
    for file in files:
        if file.endswith(".txt"):
            txt_files.append(os.path.join(root, file))
print(txt_files)

# 2.2 –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è MD5 —Ö–µ—à–∞ –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —ç–∫—Ä–∞–Ω.
for file in txt_files:
    target_file = file
    target_file_data = open(target_file, 'rb').read()
    result = hashlib.md5(target_file_data).hexdigest()
    print(result)

# 3. –ù–∞–π—Ç–∏ —Ñ–∞–π–ª MD5 —Ö–µ—à –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–≤–µ–Ω target_hash –≤ directory_to_extract_to

target_hash = "4636f9ae9fef12ebd56cd39586d33cfb"
target_file = ''  # –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∏—Å–∫–æ–º–æ–º—É —Ñ–∞–π–ª—É
target_file_data = '' # —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏—Å–∫–æ–º–æ–≥–æ —Ñ–∞–π–ª—É

files_arr = []
for r, d, f in os.walk(directory_to_extract_to):
    for file in f:
        files_arr.append(os.path.join(r, file))
for file in files_arr:
    file_data = open(file, 'rb').read()
    result = hashlib.md5(file_data).hexdigest()
    if result == target_hash:
        target_file = os.path.join(file)
        target_file_data = file_data
        break
# –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∏—Å–∫–æ–º–æ–º—É —Ñ–∞–π–ª—É –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
print(target_file)
print(target_file_data)

""""
4. –ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
–í–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∏–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –º–æ–¥—É–ª–µ–π)
"""

r = requests.get(target_file_data)
result_dct = {}  # —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∑–∞–ø–∏—Å–∏

counter = 0
lines = re.findall(r'<div class="Table-module_row__3TH83">.*?</div>.*?</div>.*?</div>.*?</div>.*?</div>', r.text)

headers = []

for line in lines:
    if counter == 0:
        headers = re.sub(r'<.*?>', ';', line)
        headers = re.findall('[–ê-–Ø–∞-—è-—ë]+\s?', headers)
        counter += 1
        headers[3] = headers[3] + headers[4]
        del headers[4]
        continue
    temp = re.sub('<.*?>', ';', line)
    temp = re.sub('\(.*?\)', '', temp)
    temp = re.sub(';+', ';', temp)
    temp = re.sub('^;', '', temp)
    temp = re.sub(';$', '', temp)
    temp = re.sub('\*', ' ', temp)

    tmp_split = re.split(';', temp)
    if (len(tmp_split) == 6):
        tmp_split.remove('üìù  ')
    country_name = tmp_split[0]
    country_name = re.sub('[üá¶-üáø]', '', country_name)
    country_name = re.sub('üõ≥', '', country_name)
    country_name = re.sub(r'^\s+', '', country_name)

    col1_val = re.sub(u'\xa0', '', tmp_split[1])
    col2_val = re.sub(u'\xa0', '', tmp_split[2])
    col3_val = re.sub(u'\xa0', '', tmp_split[3])
    col4_val = re.sub(u'\xa0', '', tmp_split[4])
    if (col4_val == '_'):
        col4_val = -1
    # –ó–∞–ø–∏—Å—å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ª–æ–≤–∞—Ä—å
    result_dct[country_name] = {}
    result_dct[country_name][headers[0]] = int(col1_val)
    result_dct[country_name][headers[1]] = int(col2_val)
    result_dct[country_name][headers[2]] = int(col3_val)
    result_dct[country_name][headers[3]] = int(col4_val)

# 5. –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è –≤ —Ñ–∞–π–ª
output = open(directory_to_extract_to + "\\data.csv", 'w')
string_headers = "–°—Ç—Ä–∞–Ω–∞;" + ';'.join(headers)
output.write(string_headers + '\n')

for key in result_dct.keys():
    output.write(str(key) + ';')
    for i in range(0, 4):
        string_to_write = str(result_dct[key][headers[i]]) + ';'
        output.write(string_to_write)
    output.write('\n')

output.close()

# 6. –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —ç–∫—Ä–∞–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ (–ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü —Ç–∞–±–ª–∏—Ü—ã)
target_country = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: ")
try:
    string = str(result_dct[target_country])
    print(string)
except KeyError:
    print("–°—Ç—Ä–∞–Ω—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
